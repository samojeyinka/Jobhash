openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobhash.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  username: Johndoe
                  email: Johndoe@gmail.com
                  password: password
            example:
              username: Johndoe
              email: Johndoe@gmail.com
              password: password
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: Johndoe@gmail.com
                  password: password
            example:
              email: Johndoe@gmail.com
              password: password
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/Johndoe:
    get:
      tags:
      - Auth
      summary: Get User
      operationId: GetUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: Nokia
                  position: Hadware Eng.
                  status: pending
            example:
              company: Nokia
              position: Hadware Eng.
              status: pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  status: interviewed
            example:
              status: interviewed
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []

    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/status-options:
    get:
      tags:
      - Jobs
      summary: Get Status Options
      operationId: GetStatusOptions
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - username
      - email
      - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: Johndoe
        email: Johndoe@gmail.com
        password: password
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: Johndoe@gmail.com
        password: password
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Nokia
        position: Hadware Eng.
        status: pending
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - status
      type: object
      properties:
        status:
          type: string
      example:
        status: interviewed
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''